<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
      crossorigin="anonymous"
    ></script>
    <script>
      function confirmDeletion(event) {
        event.preventDefault();
        if (confirm("Are you sure you want to delete this user?")) {
          event.target.closest("form").submit();
        }
      }
    </script>
  </head>
  <body>
    <div class="container mt-5">
      <div class="d-flex justify-content-between mb-4">
        <!-- Create User Button -->
        <button
          class="btn btn-success"
          data-bs-toggle="modal"
          data-bs-target="#createUserModal"
        >
          Create New User
        </button>
        <!-- Logout Button -->
        <a href="/admin/logout" class="btn btn-danger">Logout</a>
      </div>

      <h1 class="text-center mb-4">Admin Dashboard</h1>

      <!-- Search Bar -->
      <form class="input-group mb-4" action="/admin/search" method="post">
        <input
          type="text"
          class="form-control"
          id="searchInput"
          name="query"
          placeholder="Search users by name"
          required
        />
        <button
          class="btn btn-outline-secondary"
          type="submit"
          id="searchButton"
        >
          Search
        </button>
      </form>

      <!-- Users List Table -->
      <table class="table table-striped">
        <thead>
          <tr>
            <th>Username</th>
            <th>Email</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody id="userList">
          <% users.forEach(user => { %>
          <tr>
            <td><%= user.username %></td>
            <td><%= user.email %></td>
            <td>
              <button
                class="btn btn-primary btn-sm"
                data-bs-toggle="modal"
                data-bs-target="#editUserModal<%= user._id %>"
              >
                Edit
              </button>
              <form
                action="/admin/delete-user/<%= user._id %>/"
                method="post"
                class="d-inline"
              >
                <input type="hidden" name="_method" value="delete" />
                <button
                  type="submit"
                  class="btn btn-danger btn-sm"
                  onclick="confirmDeletion(event)"
                >
                  Delete
                </button>
              </form>
            </td>
          </tr>
          <!-- Edit User Modal -->
          <div
            class="modal fade"
            id="editUserModal<%= user._id %>"
            tabindex="-1"
            aria-labelledby="editUserModalLabel"
            aria-hidden="true"
          >
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                  <button
                    type="button"
                    class="btn-close"
                    data-bs-dismiss="modal"
                    aria-label="Close"
                  ></button>
                </div>
                <form
                  id="editUserForm"
                  action="/admin/edit-user/<%= user._id %>"
                  method="post"
                  novalidate
                >
                  <div class="modal-body">
                    <div class="mb-3">
                      <div class="form-floating">
                        <input
                          type="text"
                          class="form-control"
                          id="editUsername"
                          name="username"
                          placeholder="Username"
                          value="<%= user.username %>"
                          required
                        />
                        <label for="editUsername">Username</label>
                        <div class="invalid-feedback">
                          Please enter a valid username.
                        </div>
                        <div class="valid-feedback">Looks good!</div>
                      </div>
                    </div>
                    <div class="mb-3">
                      <div class="form-floating">
                        <inputx
                          type="email"
                          class="form-control"
                          id="editEmail"
                          name="email"
                          placeholder="name@example.com"
                          value="<%= user.email %>"
                          required
                        />
                        <label for="editEmail">Email</label>
                        <div class="invalid-feedback">
                          Please enter a valid email address.
                        </div>
                        <div class="valid-feedback">Looks good!</div>
                      </div>
                    </div>
                  </div>
                  <div class="modal-footer">
                    <button
                      type="button"
                      class="btn btn-secondary"
                      data-bs-dismiss="modal"
                    >
                      Close
                    </button>
                    <input type="hidden" name="_method" value="PUT" />
                    <button type="submit" class="btn btn-primary">
                      Save changes
                    </button>
                  </div>
                </form>
              </div>
            </div>
          </div>

          <% }) %>
        </tbody>
      </table>
    </div>

    <!-- Create User Modal -->
    <div
      class="modal fade"
      id="createUserModal"
      tabindex="-1"
      aria-labelledby="createUserModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="createUserModalLabel">
              Create New User
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <form
            id="createUserForm"
            action="/admin/create-user"
            method="post"
            novalidate
          >
            <div class="modal-body">
              <div class="mb-3">
                <div class="form-floating">
                  <input
                    type="text"
                    class="form-control"
                    id="newUsername"
                    name="username"
                    placeholder="Username"
                    required
                  />
                  <label for="newUsername">Username</label>
                  <div class="invalid-feedback">Please enter a username.</div>
                  <div class="valid-feedback">Looks good!</div>
                </div>
              </div>
              <div class="mb-3">
                <div class="form-floating">
                  <input
                    type="email"
                    class="form-control"
                    id="newEmail"
                    name="email"
                    placeholder="name@example.com"
                    required
                  />
                  <label for="newEmail">Email</label>
                  <div class="invalid-feedback">
                    Please enter a valid email address.
                  </div>
                  <div class="valid-feedback">Looks good!</div>
                </div>
              </div>
              <div class="mb-3">
                <div class="form-floating">
                  <input
                    type="password"
                    class="form-control"
                    id="newPassword"
                    name="password"
                    placeholder="Password"
                    required
                  />
                  <label for="newPassword">Password</label>
                  <div class="invalid-feedback">
                    Password must be at least 6 characters long.
                  </div>
                  <div class="valid-feedback">Looks good!</div>
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button
                type="button"
                class="btn btn-secondary"
                data-bs-dismiss="modal"
              >
                Close
              </button>
              <button type="submit" class="btn btn-success">Create User</button>
            </div>
          </form>
        </div>
      </div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("editUserForm");
        const usernameInput = document.getElementById("editUsername");
        const emailInput = document.getElementById("editEmail");

        // Validate email
        function validateEmail() {
          const email = emailInput.value;
          const emailPattern =
            /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
          if (emailPattern.test(email)) {
            emailInput.classList.remove("is-invalid");
            emailInput.classList.add("is-valid");
          } else {
            emailInput.classList.remove("is-valid");
            emailInput.classList.add("is-invalid");
          }
        }

        // Validate username
        function validateUsername() {
          const username = usernameInput.value.trim();
          const usernamePattern = /^[a-zA-Z][a-zA-Z.]{4,}$/;
          if (usernamePattern.test(username)) {
            usernameInput.classList.remove("is-invalid");
            usernameInput.classList.add("is-valid");
          } else {
            usernameInput.classList.remove("is-valid");
            usernameInput.classList.add("is-invalid");
          }
        }

        // Attach event listeners
        usernameInput.addEventListener("input", validateUsername);
        emailInput.addEventListener("input", validateEmail);

        // Form submit validation
        form.addEventListener("submit", function (event) {
          validateUsername();
          validateEmail();

          if (
            !usernameInput.classList.contains("is-valid") ||
            !emailInput.classList.contains("is-valid")
          ) {
            event.preventDefault();
            event.stopPropagation();
          }

          form.classList.add("was-validated");
        });
      });
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("createUserForm");
        const usernameInput = document.getElementById("newUsername");
        const emailInput = document.getElementById("newEmail");
        const passwordInput = document.getElementById("newPassword");

        // Validate email
        function validateEmail() {
          const email = emailInput.value;
          const emailPattern =
            /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
          if (emailPattern.test(email)) {
            emailInput.classList.remove("is-invalid");
            emailInput.classList.add("is-valid");
          } else {
            emailInput.classList.remove("is-valid");
            emailInput.classList.add("is-invalid");
          }
        }

        // Validate username
        function validateUsername() {
          const username = usernameInput.value.trim();
          const usernamePattern = /^[a-zA-Z][a-zA-Z.]{4,}$/;

          // Check if username matches the pattern
          if (usernamePattern.test(username)) {
            usernameInput.classList.remove("is-invalid");
            usernameInput.classList.add("is-valid");
          } else {
            usernameInput.classList.remove("is-valid");
            usernameInput.classList.add("is-invalid");
          }
        }

        // Validate password
        function validatePassword() {
          const password = passwordInput.value;
          if (password.length >= 6) {
            passwordInput.classList.remove("is-invalid");
            passwordInput.classList.add("is-valid");
          } else {
            passwordInput.classList.remove("is-valid");
            passwordInput.classList.add("is-invalid");
          }
        }

        // Attach event listeners
        usernameInput.addEventListener("input", validateUsername);
        emailInput.addEventListener("input", validateEmail);
        passwordInput.addEventListener("input", validatePassword);

        // Form submit validation
        form.addEventListener(
          "submit",
          function (event) {
            validateUsername();
            validateEmail();
            validatePassword();

            if (
              !usernameInput.classList.contains("is-valid") ||
              !emailInput.classList.contains("is-valid") ||
              !passwordInput.classList.contains("is-valid")
            ) {
              event.preventDefault();
              event.stopPropagation();
            }

            form.classList.add("was-validated");
          },
          false
        );
      });
    </script>
  </body>
</html>
